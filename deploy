#!/usr/bin/env bash

CONF=.env
CRON_TIME='*/10 * * * *'

remote() {
    ssh "$host" "$1" && echo "$1" || { echo "failed: $1"; exit 1; }
}

cron() {
    setting=`echo "$2" | sed "s/^/echo '/" | sed "s/$/';/" | tr '\n' ' '`
    remote "crontab -l | grep -v $1 | { cat; ""$setting"" } | crontab -"
}

put() {
    scp -q $1 $host:$2 && echo "$1 => $2" || { echo "failed: scp $1 $host:$2"; exit 1; }
}

killpids() {
    remote "ps aux | grep $1 | grep -v grep | awk '{print \$2}' | xargs -I {} kill -9 {}"
}

deploy_host() {
    eval $(grep -v '\[techshackd\]' $CONF)
    remote "mkdir -p `dirname $STANZA_FILE_PATH`"
    remote "mkdir -p `dirname $ENV_PATH`"
    remote "mkdir -p $HTML_PATH"
    put $CONF $ENV_PATH
    put ./techshack.py $HOME_PATH/techshack.py
    remote "chmod +x $HOME_PATH/techshack.py"
    killpids techshack
    remote "$BIN_PATH/pip install -q `cat requirements.txt | grep -v Fabric | tr '\n' ' '`"
    remote "nohup $BIN_PATH/python $HOME_PATH/techshack.py slackbot > $HOME_PATH/service.log 2>&1 &"
    read -d '' crontab << EOF
# techshack: managed by techshack.io deployment script.
$CRON_TIME $BIN_PATH/python $HOME_PATH/techshack.py backup && $HLCK_BACKUP
# techshack: managed by techshack.io deployment script.
$CRON_TIME $BIN_PATH/python $HOME_PATH/techshack.py publish && $HLCK_PUBLISH
EOF
    cron techshack "$crontab"
}

deploy() {
    for host in `grep HOSTS $CONF | awk -F= '{print $2}' | tr ',' ' '`;
    do
        deploy_host
    done
}

deploy
